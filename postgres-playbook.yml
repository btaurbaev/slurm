---
- name: Install and configuration postgres
  hosts: my_servers
  become: true
  vars:
    semaphore_version: "2.10.33"
    semaphore_db_name: "semaphore"
    semaphore_db_user: "semaphore_user"
    semaphore_db_password: "password"
    semaphore_admin_user: "admin"
    semaphore_admin_password: "admin_password"
    semaphore_admin_email: "admin@test.com"
    postgresql_version: 12 #
    postgresql_databases:
      - name: "semaphore" #
        encoding: "UTF8"
        lc_collate: "en_US.UTF-8"
        lc_ctype: "en_US.UTF-8"
        state: present
    postgresql_users:
      - name: "semaphore_user"
        password: "password"
        priv: "semaphore_db:ALL" #
    postgresql_hba_entries:
      - {
          type: "host",
          database: "all",
          user: "all",
          address: "127.0.0.1/32",
          auth_method: "md5",
        }
    postgresql_global_config_options:
      - option: max_connections
        value: 100
      - option: shared_buffers
        value: "256MB"
        
    postgres_users_no_log: false
    postgresql_global_config_options:
      - option: unix_socket_directories
        value: '{{ postgresql_unix_socket_directories | join(",") }}'
      - option: log_directory
        value: 'log'
    postgresql_unix_socket_directories:
      - /var/run/postgresql
      - /tmp   
    

  tasks:
  
  - name: "Initialise variables"
    include_role:
      name: geerlingguy.postgresql
      tasks_from: variables

  - name: "Setup postgres"
    include_role:
      name: geerlingguy.postgresql
      tasks_from: setup-Debian

  - name: "Init postgres"
    include_role:
      name: geerlingguy.postgresql
      tasks_from: initialize


  - name: Start PostgreSQL server
    systemd:
      name: "{{ postgresql_daemon }}"
      state: started

  - name: "Configure postgres"
    include_role:
      name: geerlingguy.postgresql
      tasks_from: configure

  - name: "Configure users"
    include_role:
      name: geerlingguy.postgresql
      tasks_from: users  
    
  - name: "Ensure PostgreSQL databases are presen"
    include_role:
      name: geerlingguy.postgresql
      tasks_from: databases    
      
  - name: Download Semaphore
    get_url:
      url: "https://github.com/ansible-semaphore/semaphore/releases/download/v{{ semaphore_version }}/semaphore_{{ semaphore_version }}_linux_amd64.deb"
      dest: "/tmp/semaphore.deb"

  - name: Install Semaphore
    apt:
      deb: "/tmp/semaphore.deb"

  - name: Add semaphore user with custom home directory
    user:
      name: semaphore
      home: /opt/semaphore
      shell: /bin/bash
      create_home: yes
      state: present
 
  - name: Add semaphore user to sudo group
    user:
      name: semaphore
      groups: sudo
      append: yes   

  - name: Semaphore configuration
    #become_user: semaphore
    template:
       src: templates/semaphore.config.j2
       dest: /opt/semaphore/config.json
    vars:
      ip_addr: "127.0.0.1:5432"    
      
  - name: Create directory /etc/semaphore
    file:
      path: /etc/semaphore
      state: directory
      mode: "0755"
      owner: semaphore
      group: semaphore

  - name: create sim link config.json
    file:
      src: /opt/semaphore/config.json
      dest: /etc/semaphore/config.json
      state: link
      owner: semaphore
      group: semaphore

  - name: Create systemd config for Semaphore
    template:
       src: templates/semaphore.service.j2
       dest: /etc/systemd/system/semaphore.service
    vars:
      description: "Semaphore Ansible UI"
      after: "network.target"
      exec_start: "/usr/bin/semaphore server --config /etc/semaphore/config.json"
      restart: "always"
      user: "semaphore"
      group: "semaphore"
      wanted_by: "multi-user.target"
    notify:
      - Reload systemd
      - Start Semaphore
      
  - name: Create admin user for semaphore frontend
    command:
      semaphore user add --admin
      --login admin
      --name Admin Adminov
      --email adminov@tets.kz
      --password 123456789
    args:
      chdir: /usr/bin    
      
  handlers:
    - name: Reload systemd
      systemd:
         daemon_reload: yes

    - name: Start Semaphore
      systemd:
         name: semaphore
         enabled: yes
         state: started
         
     
